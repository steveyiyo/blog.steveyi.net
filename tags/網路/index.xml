<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>網路 on 小易的部落格</title><link>https://blog.steveyi.net/tags/%E7%B6%B2%E8%B7%AF/</link><description>Recent content in 網路 on 小易的部落格</description><generator>Hugo -- gohugo.io</generator><language>tw</language><lastBuildDate>Tue, 16 May 2023 17:53:38 +0800</lastBuildDate><atom:link href="https://blog.steveyi.net/tags/%E7%B6%B2%E8%B7%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>Juniper MX204 升級全過程</title><link>https://blog.steveyi.net/posts/upgrade-mx204/</link><pubDate>Tue, 16 May 2023 17:53:38 +0800</pubDate><guid>https://blog.steveyi.net/posts/upgrade-mx204/</guid><description>最近有幸接觸了一台 Juniper MX204，恰巧也順便將其升級到新版本。
這篇文章就來記錄一下升級的過程，以及遇到的問題。
升級的方法 一般來說，Juniper 可以透過以下兩種方式來升級系統版本：
透過 USB 隨身碟 透過網路 注意：此處是指升級 Junos OS，而不是從 Boot 重新安裝。
透過 USB 隨身碟 進入 Shell 創建資料夾，並掛載 USB 隨身碟到 Juniper 設備。 # 進入 Shell start shell user root # 查看 USB 隨身碟的磁區 ls /dev/da* # 創建資料夾 mkdir /var/tmp/usb # 掛載 USB 隨身碟 mount_msdosfs /dev/da2s1 /var/tmp/usb 將更新檔案複製到 Juniper 設備上。 # 確認檔案列表 ls /var/tmp/usb # 將更新檔複製到 Juniper 設備上 cp /var/tmp/usb/junos.tgz /var/tmp 更新 Junos OS。 # 回到 cli 後執行更新 request vmhost software add /var/tmp/usb/junos.</description></item><item><title>PVE 搭配 Arista 設定 LACP 鏈路聚合</title><link>https://blog.steveyi.net/posts/configuring-lacp-link-aggregation-in-pve-with-arista/</link><pubDate>Tue, 07 Feb 2023 02:39:05 +0800</pubDate><guid>https://blog.steveyi.net/posts/configuring-lacp-link-aggregation-in-pve-with-arista/</guid><description>最近遇到一台機器使用兩張 NVIDIA Mellanox ConnectX-4 網卡，最高速率支援 25G。
但由於我們光模是 10G 的，且 Arista 7050QX 也不能支援 25G Only，所以就想說來設定一下 LACP。
環境 Arista 7050QX-32S Proxmox VE ovs-vsctl (Open vSwitch) 2.15.0 Arista 上設定 LACP 此處分成兩個步驟：
建立 Port Channel 在物理網卡上指令 Port Channel 特別注意：在 switchport 的部分維持原樣就好，記得 Port Channel 及 Ethernet Interface 兩端都要設定。
在 Arista 上建立一個 Port Channel interface Port-Channel1001 description PVE-N1-LACP switchport mode trunk 在 Ethernet Interface 上設定 Channel Group。 這邊最好開成主動 (Active) 而不是被動 (Passive)，防止 LACP neighbor 建立失敗。
interface Ethernet7/1 description PVE-N1-P0(R) switchport mode trunk channel-group 1001 mode active !</description></item><item><title>Cisco N3K-C3048TP-1GE 從 6.x 升級到 9.x 全過程</title><link>https://blog.steveyi.net/posts/upgrade-c3048tp-from-6.x-to-9.x/</link><pubDate>Mon, 06 Feb 2023 01:51:10 +0800</pubDate><guid>https://blog.steveyi.net/posts/upgrade-c3048tp-from-6.x-to-9.x/</guid><description>最近有一台 N3K-C3048TP-1GE 的版本太舊了，導致一些東西無法正常運作，所以決定升級到新版本，來解決這些問題！
大版本升級有一定的風險，請在看完本篇文章及 官方文件 後再決定是否需要進行操作！
升級前的環境 Model: N3K-C3048TP-1GE-SUP
NXOS: 6.0(2)U3(4)
重要提醒：
這台 Switch 請一定要照著指南升級，不要一次升級到最新版本！
否則可能會導致你的設備變磚無法使用！
參考文件：
Cisco Nexus 3048TP Bricked Upgrade Nexus 3048 NX-OS Software 升級版本路徑 (Upgrade Path) 6.0(2)U3(4) &amp;lt;&amp;ndash; 最初版本 6.0(2)U6(3a) 7.0(3)I7(6) 9.3(3) 從 6.0(2)U3(4) 升級到 6.0(2)U6(3a) 首先先取得對應的 bin 文件。
n3000-uk9-kickstart.6.0.2.U6.3a.bin n3000-uk9.6.0.2.U6.3a.bin 比較特別的是在這個版本下，kickstar 及 nxos 是拆分的。
取得完成後輸入以下指令來安裝新版本，請自行修改對應目錄及檔案名稱。
install all kickstart bootflash:n3000-uk9-kickstart.6.0.2.U6.3a.bin system bootflash:n3000-uk9.6.0.2.U6.3a.bin 當全部驗證完成後，請輸入 y 將新版本安裝到系統上。
Switch 會在安裝完成後自動重啟。
重開機後輸入 show module 來看看是否成功升級！
從 6.0(2)U6(3a) 升級到 7.0(3)I7(6) 這邊的話，我們使用 nxos.7.0.3.I7.6.bin 作為升級文件。</description></item><item><title>在 Linux 上實現虛擬 WAN 多撥 PPPoE</title><link>https://blog.steveyi.net/posts/multi-pppoe-in-linux/</link><pubDate>Mon, 19 Jul 2021 08:47:55 +0800</pubDate><guid>https://blog.steveyi.net/posts/multi-pppoe-in-linux/</guid><description>I&amp;#39;ve been using Linux as a router for quite some time.</description></item><item><title>在 Linux 中開啟 VRF 模組</title><link>https://blog.steveyi.net/posts/enable-vrf-linux-krenel/</link><pubDate>Tue, 06 Jul 2021 02:26:41 +0800</pubDate><guid>https://blog.steveyi.net/posts/enable-vrf-linux-krenel/</guid><description>這幾天在裝新的路由器，由於是使用服務商提供的 Image，所以發現 VRF 模組沒有成功加載。
root@eu-router:/opt/tunnel# modprobe vrf modprobe: FATAL: Module vrf not found in directory /lib/modules/5.4.0-72-generic 我的 Linux Kernel 為 5.4.0-72-generic，這邊安裝一下擴充包。
apt install linux-modules-extra-`uname -r` 接著，在加載一下 VRF，沒有任何回應就代表成功囉！
modprobe vrf Virtual Routing and Forwarding (VRF)</description></item><item><title>利用 FRRouting 設定策略路由</title><link>https://blog.steveyi.net/posts/frrouting-pbr/</link><pubDate>Tue, 18 May 2021 16:23:58 +0800</pubDate><guid>https://blog.steveyi.net/posts/frrouting-pbr/</guid><description>前幾天，我為了調整我實驗室內的網路架構，讓其可以全部走 VPN 出去，並且可以進入到我的大內網，所以在研究策略路由 (PBR)
我本來是使用 VRF（三層交換）來隔離我的網路（其實這樣應該算另類的策略路由了吧X），但這樣會導致我沒辦法把我的 Service 監聽在 VRF Interface 內。
導致&amp;hellip; 我就不能架設 DoH 在路由器上了
後來，我發現我可以利用其他方式做到 PBR，而不需要透過 VRF 來隔離
PBR 是什麼？ PBR 全名 Policy Based Routing，是一種可以透過修改下一跳 IP Address 來達到控制路由或封包方向的一種技術
在 Linux 下怎麼做到？ Linux 下其實有許多種方式可以做到，比如說透過 Routing Daemon 或是 ip link 及 ip rule 的指令去做到
# 比如說我想要讓 10.121.210.0/24 這條路由放在一張表裡面 ip rule add from 10.121.210.0/24 lookup TW # 並讓其網路走 VPN Interface 出去 ip route add 0.0.0.0/0 via 10.121.210.0/24 dev VPN-JP table TW 但這樣的話，我每次都開機時都要執行一次 Script。</description></item><item><title>利用 OSPF 及 BGP 來最佳化大內網</title><link>https://blog.steveyi.net/posts/ospf-and-bgp/</link><pubDate>Sun, 16 May 2021 22:17:25 +0800</pubDate><guid>https://blog.steveyi.net/posts/ospf-and-bgp/</guid><description>一直一來，我跟朋友間有一個類似於 DN42 的大內網。
我們使用 VPN 建立 BGP 互聯，並將這個大內網部署於我各個區域的設備使用。
P.S. 目前共有 46 條路由左右
而我目前則是在一個點與其他人建立 BGP Peer，並使用 Static Route 處理內部路由
e.g. 10.121.23.242 的設備想要到我的內網下的某台設備 10.121.210.3
比如說，我在核心路由器上指一條 10.121.210.0/24 到我放在學校的路由器上。
而在學校的路由器上，我則與核心路由器建立了 BGP Peer，來收我們的大內網全表。
這樣確實可以讓我們的網路動，但是當核心路由器故障時，其他人則無法進到我的內網。
於是我想到，我可以使用 OSPF 及 iBGP 去解決單一核心路由器故障的問題
什麼是 OSPF？ OSPF 全名 Open Shortest Path First，是一種 IGP 協議，使用 Link State Routing 算法。
IETF 中的 IGP 開發團隊在 1988 年提出 RFC 2328，用於 IPv4 的路由協定。
在當時，由於 RIP 單一路徑最多只能支 15 個網路設備，所以 RIP 路由協定在當時並不適合用於大型的網路環境，所以才會研發 IGRP 路由協定，並且同時開發出 OSPF 協定。
目前 OSPF 分為兩種版本：</description></item><item><title>解決 Ubuntu 上 53 Port 占用問題</title><link>https://blog.steveyi.net/posts/ubuntu-53-port-already-in-use/</link><pubDate>Wed, 12 May 2021 20:58:02 +0800</pubDate><guid>https://blog.steveyi.net/posts/ubuntu-53-port-already-in-use/</guid><description>最近為了在路由器上安裝 DoH Client 並架設 DNS Server 給內網機器使用，發現 Ubuntu 常常會使用 53 Port。
經過檢查一輪後，發現是 systemd-resolve 所導致的，於是找到這些方法去關閉他！
在此之前，如果大家發現 53 Port 被使用，可以先下以下指令來查看是哪個進程去用的。
sudo netstat -pna | grep 53 那接著，我們來關閉一下 systemd-resolve 使用 53 Port 的問題吧
首先，我們編輯 /etc/systemd/resolved.conf 文件
sudo vi /etc/systemd/resolved.conf 我們將 DNSStubListener 取消註解，並修改為 No
[Resolve] #DNS= #FallbackDNS= #Domains= #LLMNR=no #MulticastDNS=no #DNSSEC=no #DNSOverTLS=no #Cache=yes DNSStubListener=no #ReadEtcHosts=yes 接著，在輸入這行指令
sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf 最後，我們先將 systemd-resolved 服務重啟
sudo systemctl restart systemd-resolved 接著，我們就可以使用 53 Port 囉！</description></item><item><title>在 VSCode 中將 .tmpl 檔案設為 HTML 語法</title><link>https://blog.steveyi.net/posts/set_tmpl_file_as_html_in_vscode/</link><pubDate>Sun, 25 Apr 2021 09:57:13 +0800</pubDate><guid>https://blog.steveyi.net/posts/set_tmpl_file_as_html_in_vscode/</guid><description>前陣子開始學習 Golang 時，使用了 .tmpl 作為網頁模板
但發現，這樣不會像 HTML 檔案一樣，無法自動處理格式。
P.S. 裝了相關外掛也只會處理 .html 文件
在查詢了一下相關文件後，發現可以修改使用者的設置來處理
那這邊有兩種做法，我們來介紹一下
第一種是直接修改 settings.json 文件，在最下面新增以下程式碼
&amp;#34;files.associations&amp;#34;: { &amp;#34;*.tmpl&amp;#34;: &amp;#34;html&amp;#34; } 第二種則是進入設定，點擊文字編輯器，文件。
並新增 *.tmpl 為 html
最終結果就會像這樣啦！</description></item><item><title>在 Linux 上安裝 DHCP 伺服器</title><link>https://blog.steveyi.net/posts/install-dhcp-server-on-linux/</link><pubDate>Sun, 11 Apr 2021 09:37:30 +0800</pubDate><guid>https://blog.steveyi.net/posts/install-dhcp-server-on-linux/</guid><description>我時常用 Linux 系統當作路由器，理由很簡單，因為虛擬機需要。
但想了想，既然都這樣做了，何不寫下部落格呢？
那麼&amp;hellip; 開始安裝吧！
安裝 isc-dhcp-server 首先，我們需要先安裝一個套件，名為 isc-dhcp-server
sudo apt install isc-dhcp-server 設置 DHCP Server 安裝完成後，我們需要編輯設定檔 /etc/dhcp/dhcpd.conf
範例大概像這樣
option domain-name &amp;#34;network.steveyi.net&amp;#34;; # 網域名稱 option domain-name-servers 8.8.8.8; # DNS Server default-lease-time 600; # 預設租賃時間 max-lease-time 3600; # 最大租賃時間 authoritative; # 網段，這邊分配 /24 使用 subnet 10.121.210.0 netmask 255.255.255.0 { range 10.121.210.1 10.121.210.253; option subnet-mask 255.255.255.0; option routers 10.121.210.254; } 接著，我們需要編輯發 DHCP 包的網卡 /etc/default/isc-dhcp-server
最後，輸入 service isc-dhcp-server restart
這樣就完成囉～</description></item><item><title>透過 ASN 指定網路出口</title><link>https://blog.steveyi.net/posts/bgp-asn-specify-gateway/</link><pubDate>Sat, 06 Feb 2021 02:13:10 +0800</pubDate><guid>https://blog.steveyi.net/posts/bgp-asn-specify-gateway/</guid><description>在去年一月時，我申請到了自己的第一個 ASN - AS209557，也做了很多酷實驗！
今天，我改造了我家的路由，並可以指定 ASN 走哪條路出去
首先，先說一下我家的路由器資訊 Ubuntu 20.04 軟路由
Bird2 (Internet Routing Daemon)
網路環境(包括 VPN 隧道) 中華電信 PPPoe 非固定制 IP 100/40M
到 TANet 的 WireGuard Tunnel
到 GCP 的 WireGuard Tunnel
到 Vultr 的 WireGuard Tunnel
那主要做法是要將 AS1659 及 AS6939 的網走 TANet
AS60614 走 Vultr 其餘的走中華電信
並全部開啟 NAT
整個家中內網處於一個 VRF (vrf_HOME) 中
PS.但下方文章會直接收入 Kernel
安裝 bird2 首先，我們要先安裝 bird2，這是一個路由進程軟體。
可以處理 BGP, OSPF, ISIS, Static Route&amp;hellip; 等等的路由
Debian &amp;amp; Ubuntu:</description></item><item><title>透過 BGP 組建不同網段互通</title><link>https://blog.steveyi.net/posts/bgp-network-peer/</link><pubDate>Tue, 11 Aug 2020 18:56:26 +0000</pubDate><guid>https://blog.steveyi.net/posts/bgp-network-peer/</guid><description>小時候常常為了家中的網路管理而困擾。
舉例來說，我家有三個樓層、三台路由器。並讓三個路由器後的設備可以互通，但是如果我三台路由器都打開 DHCP Server 的話，三台將會是獨立的網段而不互通。
後來發現如果使用 bridge（橋接）的方式將一台路由器當作 DHCP Server，其他的當作 AP 或 Switch，就可以達到網段相同且可以互通了！
不過，這次我們要做的是跨 L3 的「異地組網」，沒辦法去做到使用同一個的 DHCP Server 來連接，所以就會有兩個網段。
那之前有跟大家分享過 FRRouting 安裝教學，所以我們也可以透過 BGP 及 VPN Tunnel 來組建不同區域網段互通。
事前準備 路由器須為 Linux 系統，或是可以使用 BGP 功能的路由器。
e.g. RouterOS, Cisco IOS, Junos, etc.
Linux 路由套件，這邊推薦以下兩種：
FRRouting (FRR) BIRD Router:
R1 R2 以 FRRouting 來做 BGP 互連 本篇將以 FRRouting 作為示範。
PS. 雙方路由器必須支持 BGP，否則只能使用 NAT 設備來進行互通了
設定路由器 IP 地址 我們先在雙方路由器配置好路由器 IP
R1:
10.0.1.1/24 DHCP 分配 10.0.1.2 - 10.</description></item></channel></rss>