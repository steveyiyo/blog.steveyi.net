<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>網域 on 小易的部落格</title><link>https://blog.steveyi.net/tags/%E7%B6%B2%E5%9F%9F/</link><description>Recent content in 網域 on 小易的部落格</description><image><url>https://blog.steveyi.net/images/banner.webp</url><link>https://blog.steveyi.net/images/banner.webp</link></image><generator>Hugo -- gohugo.io</generator><language>tw</language><lastBuildDate>Tue, 07 Jul 2020 05:33:14 +0000</lastBuildDate><atom:link href="https://blog.steveyi.net/tags/%E7%B6%B2%E5%9F%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>PVE入門心得-安裝篇</title><link>https://blog.steveyi.net/posts/pve-install/</link><pubDate>Tue, 07 Jul 2020 05:33:14 +0000</pubDate><guid>https://blog.steveyi.net/posts/pve-install/</guid><description>玩虛擬機有一段時間了，不過是在Windows系統下裝VMware Workstation玩xD
後來閒置了幾台電腦，恰好也查詢到PVE(Proxmox VE)這個開源虛擬系統，於是 我們就來安裝玩玩吧!
前期準備:
Proxmox VE 安裝碟
高核心且空閒的電腦(不然跑起來會很卡)
首先，我們先到官方網站下載PVE的ISO檔案 官網載點
點擊左方的 Proxmox VE 6.2 ISO Installer 來下載(6.2是版本號，右方則是種子下載)
下載好之後，我們將檔案寫入USB中，做成安裝碟
這邊推薦使用Etcher來寫入，官網連結
做好安裝碟之後，我們進入BIOS，並調整開機順序(將安裝碟設為第一順位)
接著我們就可以進行安裝了!
首先，選擇第一個 Install Proxmox VE
接著同意服務條款
選擇硬碟
選擇國家及時區
設置root密碼及電子郵件地址
設置主機名稱及網路(這邊建議一次就設定好，不然後續修改IP有點麻煩)
全部完成後，就點擊Install來進行安裝!
安裝完成後，我們使用 https://你的IP:8006 就可以進入管理面板囉!
下一篇，我們將與大家分享一些配置的過程</description></item><item><title>在 Ubuntu 系統下架設 Tunnel Broker 服務 (v4 to v6)</title><link>https://blog.steveyi.net/posts/tunnel-broker-bgp/</link><pubDate>Sun, 31 May 2020 16:56:41 +0000</pubDate><guid>https://blog.steveyi.net/posts/tunnel-broker-bgp/</guid><description>前言 之前拿到了一個自治號碼(AS Number)，也拿到了1個 /44 及兩個 /48 的iPv6
恰好最近想到之前有使用過HE.Net的tunnel broker服務
這次就來架設一下sit隧道的tunnel broker服務！本篇不會說明ipv6的取得方式，請自行詢問主機提供商
本篇將使用開源工具-IPv6-in-IPv4 Tunnel
配置工具 首先，將工具下載下來
git clone [https://github.com/sskaje/6in4.git](https://github.com/sskaje/6in4) 我們進入項目的etc資料夾，並修改config.ini
nano config.ini 依序編輯 IPV6_NETWORK, IPV6_CIDR, INTERFACE, BIND_IP(有多iPv4需要)
接著輸入 Crtl + X 來保存
修改系統設定來允許iPv6轉發 nano /etc/sysctl.conf 在最下方添加下方這項net.ipv6.conf.all.forwarding = 1 Crtl + X 保存 sysctl -p 防火牆 iptables -I INPUT -p 41 --j ACCEPT iptables -I OUTPUT -p 41 --j ACCEPT iptables -I FORWARD -p 41 --j ACCEPT 使用工具建立伺服端(新增隧道) 假設隧道ID為1，伺服端IPv4為1.1.1.1 用戶端IPv4為8.8.8.8]
配置文件中設置的IPv6子網為 2a0e:b107:7e0::，子網路遮罩為48(必須為8的倍數)工具會自動分割出 一個用於隧道的 /64子網及一個用於用戶路由的 /64子網</description></item><item><title>建立 Cloud Identity 帳戶</title><link>https://blog.steveyi.net/posts/create-cloud-identity/</link><pubDate>Fri, 15 May 2020 20:35:11 +0000</pubDate><guid>https://blog.steveyi.net/posts/create-cloud-identity/</guid><description>首先，進入 Cloud Identity 申請頁面 點擊下一頁
接著輸入公司名稱(可以隨意輸入)，員工數量(隨意選擇) 把它當作一個團隊
選擇地點（設定好就不能修改了），其實作用不大
設定目前的電子郵件地址（一些申請的郵件會寄到這裡）
輸入要設定的網域（不得使用於其他 G Suite 服務）
接著建立使用者
機器人驗證
當出現這個頁面時，代表註冊完成了！
接著我們需要驗證網域
請看下一篇文章 - Cloud Identity 驗證網域及建立帳號</description></item><item><title>刪除 G suite 組織</title><link>https://blog.steveyi.net/posts/delete-gsuite/</link><pubDate>Fri, 15 May 2020 18:17:25 +0000</pubDate><guid>https://blog.steveyi.net/posts/delete-gsuite/</guid><description>之前有跟大家分享註冊G Suite帳號的方式，最近想將 Cloud Identity免費版 的G Suite組織刪除
由於完全沒有刪除過G Suite組織，所以稍微爬文了一下
大致整理了一下刪除的方式
重要提醒：
刪除前，請先取消約期授權並刪除所有GCP專案
刪除後，所有組織資料會被清除
首先，進入G Suite控制台，點擊公司資料
接著點擊帳戶管理
接著點擊 刪除帳號
接著會提示你，這個步驟無法復原
打勾後點擊 刪除帳號
接著帳號就刪除囉！</description></item><item><title>Backblaze B2 支援 S3 API 了！</title><link>https://blog.steveyi.net/posts/backblaze-b2-compatible-s3-api/</link><pubDate>Thu, 14 May 2020 03:08:02 +0000</pubDate><guid>https://blog.steveyi.net/posts/backblaze-b2-compatible-s3-api/</guid><description>前幾天打開 Backblaze 後，看到一行大大的字
沒錯！S3 API 跟 Backblaze B2 兼容啦！
S3 API 是目前市面上最流行的協定，很多軟硬體都兼容
Backblaze B2 則是非常棒的雲端存處(低價優勢)
如何使用 S3 API 若存處桶是在 2020/05/04 前創立的，則要創立一個新的，並將檔案移入(推薦使用 Rclone，會自動支援 B2 Copy File)
然後創建一個新的 App Key (不要使用主要的喔)
有關於一些 B2 的文章介紹:
Backblaze B2 低價的雲端數據存儲服務
Backblaze B2 和 Cloudflare Workers 設定自訂域名
BackBlaze 宣布第一個歐洲數據中心啟用</description></item><item><title>透過 Github 託管靜態網頁 - Github Pages</title><link>https://blog.steveyi.net/posts/github-static-website/</link><pubDate>Wed, 22 Apr 2020 14:09:46 +0000</pubDate><guid>https://blog.steveyi.net/posts/github-static-website/</guid><description>首先，進入Github 點擊左方綠色按鈕的 New
輸入Repository名稱（自定義）
選擇 Public(公開) 或是 Private(私人)
點擊Create Repository
這樣就建立好一個Repository囉！
接著我們要下載Github Desktop，方便上傳網頁原始檔
點擊中間的Download for macOS（Windows 則會是 Download for Windows）
下載完成後，登入Github帳號（Sign in to Github.com）
接著選擇剛剛建立的Repository
點擊 Clone
接著將檔案複製到資料夾中
回到Github Desktop，輸入Commit changes的資訊
點擊Commit to master
接著我們回到網頁，刷新後應該就會看到剛剛上傳的檔案囉！
接著來設定一下Github Pages
選擇master branch
接著就會產生子網域，就可以嘗試進入網站囉！
下次再來補充綁定自訂網域及SSL的方式吧！</description></item><item><title>Mailgun + Gmail 達成自訂網域郵箱</title><link>https://blog.steveyi.net/posts/mailgun-gmail-custom-domain-email/</link><pubDate>Wed, 22 Apr 2020 12:48:48 +0000</pubDate><guid>https://blog.steveyi.net/posts/mailgun-gmail-custom-domain-email/</guid><description>小時候總是很好奇寄件者後方的網域名稱是什麼，後來接觸到網站架設後，註冊了許多網域（現在手上大概6個網域左右)，也慢慢解開了小時候的疑惑
今天就來分享一下 Mailgun + Gmail 自訂網域郵箱的方法吧！
首先，先註冊 Mailgun，預設有 5000 封信件額度
PS.如果你是GCP客戶，可以到 合作頁面，申請免費 30000 額度
註冊之後，我們進入控制台新增網域（預設會有一個網域）
上方輸入網域名網域名稱，下方勾選 Create DKIM Authority 並選擇 1024 位元(部分 DNS 服務商不支持 2048 位元)
接著設定 DNS 紀錄，MX 紀錄一定要設定（不然會收不到信）
小提醒：如果你有其他郵件收信服務(如: Gsuite, Office… 等)，不要設定 MX 紀錄，不然原先的服務會收不到信
設置完後，等待 DNS 生效 我們就可以來進行下一個步驟了！
接著我們來設置 SMTP 帳號
首先，打開 Mailgun 控制台
點擊 Domain settings 選擇 SMTP credentials
接著點擊右上角的 New SMTP User 來建立新帳號
右上方為密碼！先記起來，等等會用到
接著我們來設定轉寄郵件
點擊左方的 Receiving，在點擊右上方的 Create Route
接著選擇 Match Recipient (指定收件者)，並輸入剛剛建立的電子郵件地址
下方 Forward 填寫 Gmail 的電子郵件地址，存檔！</description></item><item><title>[教學] AWS Route 53 代管DNS</title><link>https://blog.steveyi.net/posts/aws-route53/</link><pubDate>Mon, 06 Apr 2020 14:38:57 +0000</pubDate><guid>https://blog.steveyi.net/posts/aws-route53/</guid><description>從2017年 註冊了第一個網域之後，DNS 代管商一直是我在研究的一個部分！
今天來推薦一下由 AWS 推出的 DNS 代管服務 - Route 53
前置作業：
AWS帳號
網域
建立託管區域 首先，進入 AWS 主控台搜尋 Route 53
接著點擊左上角的託管區域
點擊左上角的，建立託管區域 接著在右方自己的網域名稱
接著系統就會建立一個託管區域囉！（這邊先將NS紀錄記起來，下個步驟會用到）
設定 DNS 伺服器 那我們剛剛已經在 AWS Route 53 建立了 DNS 託管區域，接著我們要到網域註冊商來設定 DNS 伺服器！
首先，打開網域管理頁面（本篇以 Gandi 示範），並找到名稱伺服器或是 Nameservers
點擊變更後，將原本的紀錄刪除，並將 AWS Route 53 自動產生的 NS 紀錄貼上去
接著就等待生效囉！大約 24-48 小時生效（實際上應該 5-10 分鐘生效 XD）</description></item><item><title>在 Gandi 購買網域</title><link>https://blog.steveyi.net/posts/register-domain-at-gandi/</link><pubDate>Fri, 03 Apr 2020 18:40:19 +0000</pubDate><guid>https://blog.steveyi.net/posts/register-domain-at-gandi/</guid><description>之前有跟大家分享將網域從 Google 移轉至 Gandi 的過程 點我看文章
本篇就來分享一下 在 Gandi 購買網域的過程吧！
前置準備：
錢（用來註冊網域的費用）
首先，我們打開 Gandi 的官網
搜尋你想要的網域，接著將其加入購物車
接著就可以結帳啦
Gandi 支持很多付款方式：信用卡、銀聯、PayPal、轉帳、比特幣(BitCoin)
其中 Paypal 必須為非台灣帳戶才可以付款
付款完成後，系統就會建立網域資料 可以在這裡查看狀態
建立完成後，會收到一封電子郵件通知
接著就可以前往控制台管理你的網域囉！</description></item></channel></rss>